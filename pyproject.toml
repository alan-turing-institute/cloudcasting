[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"


[project]
name = "cloudcasting"
version = "0.1.0"
authors = [
  { name = "cloudcasting Maintainers", email = "nsimpson@turing.ac.uk" },
]
description = "Tooling and infrastructure to enable cloud nowcasting."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dependencies = [
    "gcsfs",
    "zarr",
    "xarray",
    "dask",
    "pyresample",
    "pyproj",
    "ocf-blosc2>=0.0.10",  # for no-import codec register
    "typer",
    "lightning",
    "torch>=2.3.0", # needed for numpy 2.0
    "scikit-image",
    "jaxtyping",
    "numpy",
    "matplotlib",
    "wandb",
    "tqdm",
]
[project.optional-dependencies]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
  "pre-commit",
  "scipy",
  "pytest-mock",
]

[tool.setuptools.package-data]
"cloudcasting" = ["data/*.zip"]

[project.scripts]
cloudcasting = "cloudcasting.cli:app"

[project.urls]
Homepage = "https://github.com/climetrend/cloudcasting"
"Bug Tracker" = "https://github.com/climetrend/cloudcasting/issues"
Discussions = "https://github.com/climetrend/cloudcasting/discussions"
Changelog = "https://github.com/climetrend/cloudcasting/releases"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config"
]
xfail_strict = true
filterwarnings = [
  "error",
  "ignore:pkg_resources:DeprecationWarning",                                        # lightning
  "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",  # lightning
  "ignore:ast.Str is deprecated:DeprecationWarning",             # jaxtyping
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.coverage]
run.source = ["cloudcasting"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.10"
show_error_codes = true
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[[tool.mypy.overrides]]
module = "cloudcasting.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "ocf_blosc2",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "cloudcasting.download",
    "cloudcasting.cli",
]
disallow_untyped_calls = false

[tool.ruff]
src = ["src"]
exclude = []
line-length = 100 # how long you want lines to be

[tool.ruff.format]
docstring-code-format = true  # code snippets in docstrings will be formatted

[tool.ruff.lint]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
]
ignore = [
  "PLR",    # Design related pylint codes
  "ISC001", # Conflicts with formatter
]
unfixable = [
  "F401",   # Would remove unused imports
  "F841",   # Would remove unused variables
]
flake8-unused-arguments.ignore-variadic-names = true  # allow unused *args/**kwargs
